/*
 * Ark API
 *
 * Combined Ark Service and Indexer API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::Deserialize;
use serde::Serialize;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StreamResultOfV1GetEventStreamResponse {
    #[serde(rename = "result", skip_serializing_if = "Option::is_none")]
    pub result: Option<models::V1GetEventStreamResponse>,
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<models::RpcStatus>,
}

impl StreamResultOfV1GetEventStreamResponse {
    pub fn new() -> StreamResultOfV1GetEventStreamResponse {
        StreamResultOfV1GetEventStreamResponse {
            result: None,
            error: None,
        }
    }
}
