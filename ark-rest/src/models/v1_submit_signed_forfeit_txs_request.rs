/*
 * Ark API
 *
 * Combined Ark Service and Indexer API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::Deserialize;
use serde::Serialize;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1SubmitSignedForfeitTxsRequest {
    /// Forfeit txs signed by the user.
    #[serde(rename = "signedForfeitTxs", skip_serializing_if = "Option::is_none")]
    pub signed_forfeit_txs: Option<Vec<String>>,
    /// The user has to sign also the commitment tx if he registered a boarding UTXO.
    #[serde(rename = "signedCommitmentTx", skip_serializing_if = "Option::is_none")]
    pub signed_commitment_tx: Option<String>,
}

impl V1SubmitSignedForfeitTxsRequest {
    pub fn new() -> V1SubmitSignedForfeitTxsRequest {
        V1SubmitSignedForfeitTxsRequest {
            signed_forfeit_txs: None,
            signed_commitment_tx: None,
        }
    }
}
